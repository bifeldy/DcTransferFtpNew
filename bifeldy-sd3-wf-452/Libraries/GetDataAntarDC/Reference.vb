'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace GetDataAntarDC
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetDataAntarDCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNoTglPBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cek_RekonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_BpbDcOperationCompleted As System.Threading.SendOrPostCallback
        
        Private del_npbOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ins_rekon_bpbdcOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.DCTransferFTP.My.MySettings.Default.DCTransferFTP_GetDataAntarDC_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetDataAntarDCCompleted As GetDataAntarDCCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNoTglPBCompleted As GetNoTglPBCompletedEventHandler
        
        '''<remarks/>
        Public Event Cek_RekonCompleted As Cek_RekonCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_BpbDcCompleted As Get_BpbDcCompletedEventHandler
        
        '''<remarks/>
        Public Event del_npbCompleted As del_npbCompletedEventHandler
        
        '''<remarks/>
        Public Event ins_rekon_bpbdcCompleted As ins_rekon_bpbdcCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataAntarDC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataAntarDC() As String
            Dim results() As Object = Me.Invoke("GetDataAntarDC", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataAntarDCAsync()
            Me.GetDataAntarDCAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataAntarDCAsync(ByVal userState As Object)
            If (Me.GetDataAntarDCOperationCompleted Is Nothing) Then
                Me.GetDataAntarDCOperationCompleted = AddressOf Me.OnGetDataAntarDCOperationCompleted
            End If
            Me.InvokeAsync("GetDataAntarDC", New Object(-1) {}, Me.GetDataAntarDCOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataAntarDCOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataAntarDCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataAntarDCCompleted(Me, New GetDataAntarDCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNoTglPB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNoTglPB(ByVal p_kodeDCAsal As String, ByVal p_kodeDCTujuan As String) As String
            Dim results() As Object = Me.Invoke("GetNoTglPB", New Object() {p_kodeDCAsal, p_kodeDCTujuan})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNoTglPBAsync(ByVal p_kodeDCAsal As String, ByVal p_kodeDCTujuan As String)
            Me.GetNoTglPBAsync(p_kodeDCAsal, p_kodeDCTujuan, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNoTglPBAsync(ByVal p_kodeDCAsal As String, ByVal p_kodeDCTujuan As String, ByVal userState As Object)
            If (Me.GetNoTglPBOperationCompleted Is Nothing) Then
                Me.GetNoTglPBOperationCompleted = AddressOf Me.OnGetNoTglPBOperationCompleted
            End If
            Me.InvokeAsync("GetNoTglPB", New Object() {p_kodeDCAsal, p_kodeDCTujuan}, Me.GetNoTglPBOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNoTglPBOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNoTglPBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNoTglPBCompleted(Me, New GetNoTglPBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Cek_Rekon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Cek_Rekon(ByVal p_dckirim As String, ByVal p_dctujuan As String, ByVal p_docno As Integer, ByVal p_tgl As Date) As String
            Dim results() As Object = Me.Invoke("Cek_Rekon", New Object() {p_dckirim, p_dctujuan, p_docno, p_tgl})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Cek_RekonAsync(ByVal p_dckirim As String, ByVal p_dctujuan As String, ByVal p_docno As Integer, ByVal p_tgl As Date)
            Me.Cek_RekonAsync(p_dckirim, p_dctujuan, p_docno, p_tgl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cek_RekonAsync(ByVal p_dckirim As String, ByVal p_dctujuan As String, ByVal p_docno As Integer, ByVal p_tgl As Date, ByVal userState As Object)
            If (Me.Cek_RekonOperationCompleted Is Nothing) Then
                Me.Cek_RekonOperationCompleted = AddressOf Me.OnCek_RekonOperationCompleted
            End If
            Me.InvokeAsync("Cek_Rekon", New Object() {p_dckirim, p_dctujuan, p_docno, p_tgl}, Me.Cek_RekonOperationCompleted, userState)
        End Sub
        
        Private Sub OnCek_RekonOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cek_RekonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cek_RekonCompleted(Me, New Cek_RekonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BpbDc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_BpbDc(ByVal p_dckirim As String, ByVal p_dctujuan As String, ByVal p_docno As Integer, ByVal p_tgl As String) As String
            Dim results() As Object = Me.Invoke("Get_BpbDc", New Object() {p_dckirim, p_dctujuan, p_docno, p_tgl})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_BpbDcAsync(ByVal p_dckirim As String, ByVal p_dctujuan As String, ByVal p_docno As Integer, ByVal p_tgl As String)
            Me.Get_BpbDcAsync(p_dckirim, p_dctujuan, p_docno, p_tgl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_BpbDcAsync(ByVal p_dckirim As String, ByVal p_dctujuan As String, ByVal p_docno As Integer, ByVal p_tgl As String, ByVal userState As Object)
            If (Me.Get_BpbDcOperationCompleted Is Nothing) Then
                Me.Get_BpbDcOperationCompleted = AddressOf Me.OnGet_BpbDcOperationCompleted
            End If
            Me.InvokeAsync("Get_BpbDc", New Object() {p_dckirim, p_dctujuan, p_docno, p_tgl}, Me.Get_BpbDcOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_BpbDcOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_BpbDcCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_BpbDcCompleted(Me, New Get_BpbDcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/del_npb", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function del_npb(ByVal p_dckirim As String, ByVal p_dctujuan As String, ByVal p_docno As Integer, ByVal p_tgl As String, ByVal p_isUpdate As Boolean) As String
            Dim results() As Object = Me.Invoke("del_npb", New Object() {p_dckirim, p_dctujuan, p_docno, p_tgl, p_isUpdate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub del_npbAsync(ByVal p_dckirim As String, ByVal p_dctujuan As String, ByVal p_docno As Integer, ByVal p_tgl As String, ByVal p_isUpdate As Boolean)
            Me.del_npbAsync(p_dckirim, p_dctujuan, p_docno, p_tgl, p_isUpdate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub del_npbAsync(ByVal p_dckirim As String, ByVal p_dctujuan As String, ByVal p_docno As Integer, ByVal p_tgl As String, ByVal p_isUpdate As Boolean, ByVal userState As Object)
            If (Me.del_npbOperationCompleted Is Nothing) Then
                Me.del_npbOperationCompleted = AddressOf Me.Ondel_npbOperationCompleted
            End If
            Me.InvokeAsync("del_npb", New Object() {p_dckirim, p_dctujuan, p_docno, p_tgl, p_isUpdate}, Me.del_npbOperationCompleted, userState)
        End Sub
        
        Private Sub Ondel_npbOperationCompleted(ByVal arg As Object)
            If (Not (Me.del_npbCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent del_npbCompleted(Me, New del_npbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ins_rekon_bpbdc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ins_rekon_bpbdc(ByVal p_type_trans As String, ByVal p_hdrid As Integer, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal p_byte() As Byte) As String
            Dim results() As Object = Me.Invoke("ins_rekon_bpbdc", New Object() {p_type_trans, p_hdrid, p_byte})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ins_rekon_bpbdcAsync(ByVal p_type_trans As String, ByVal p_hdrid As Integer, ByVal p_byte() As Byte)
            Me.ins_rekon_bpbdcAsync(p_type_trans, p_hdrid, p_byte, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ins_rekon_bpbdcAsync(ByVal p_type_trans As String, ByVal p_hdrid As Integer, ByVal p_byte() As Byte, ByVal userState As Object)
            If (Me.ins_rekon_bpbdcOperationCompleted Is Nothing) Then
                Me.ins_rekon_bpbdcOperationCompleted = AddressOf Me.Onins_rekon_bpbdcOperationCompleted
            End If
            Me.InvokeAsync("ins_rekon_bpbdc", New Object() {p_type_trans, p_hdrid, p_byte}, Me.ins_rekon_bpbdcOperationCompleted, userState)
        End Sub
        
        Private Sub Onins_rekon_bpbdcOperationCompleted(ByVal arg As Object)
            If (Not (Me.ins_rekon_bpbdcCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ins_rekon_bpbdcCompleted(Me, New ins_rekon_bpbdcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetDataAntarDCCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataAntarDCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataAntarDCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetNoTglPBCompletedEventHandler(ByVal sender As Object, ByVal e As GetNoTglPBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNoTglPBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Cek_RekonCompletedEventHandler(ByVal sender As Object, ByVal e As Cek_RekonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Cek_RekonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Get_BpbDcCompletedEventHandler(ByVal sender As Object, ByVal e As Get_BpbDcCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_BpbDcCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub del_npbCompletedEventHandler(ByVal sender As Object, ByVal e As del_npbCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class del_npbCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ins_rekon_bpbdcCompletedEventHandler(ByVal sender As Object, ByVal e As ins_rekon_bpbdcCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ins_rekon_bpbdcCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
